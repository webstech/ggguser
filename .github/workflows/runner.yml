# toy time tests
name: Build & run tests

on:
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    env:
      GIT_BASE: 2dc94da3744bfbbf145eca587a0f5ff480cc5867
      GIT_REF: 89bece5
      GITGITGADGET_REPO_OWNER: "webstech"
      GITGITGADGET_REPO_BASEOWNER: "webstech"
      GITGITGADGET_REPO_NAME: "gggmonitored"
      GITGITGADGET_MAILREPO_NAME: "gggmail"
      GITGITGADGET_MAILREPO_OWNER: "webstech"
      GITGITGADGET_MAILREPO_HOST: "github.com"
      GITGITGADGET_MAIL_AUTHOR: "gitter"
      GITGITGADGET_CONFIG: "../config.json"
      # GIT_AUTHOR_NAME: ${{ env.GITGITGADGET_MAIL_AUTHOR }}
      # GIT_AUTHOR_EMAIL: ${{ env.GITGITGADGET_MAIL_AUTHOR }}@fakehost.com

    steps:
    # install node
    - name: Install node
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        # cache: "npm"

    # Check out repo under sub-directory so other repos can be checked out
    # Check out gitgitgadget
    - name: gitgitgadget - Checkout
      uses: actions/checkout@v3
      with:
        repository: webstech/gitgitgadget
        path: gitgitgadget
        # ref: dry-part-5

    # install gitgitgadget
    - name: gitgitgadget - Install packages
      run: npm ci
      working-directory: gitgitgadget

    # build gitgitgadget
    - name: gitgitgadget- Run build
      run: npm run build
      working-directory: gitgitgadget

    # Check out ggguser
    - name: ggguser - Checkout
      uses: actions/checkout@v3
      with:
        path: ggguser

    # install ggguser
    - name: ggguser - Install packages
      run: npm ci
      working-directory: ggguser

    # build ggguser
    - name: ggguser - Run build
      run: npm run build
      working-directory: ggguser

    # Check out ggg supported project
    - name: gggmonitored - Checkout
      uses: actions/checkout@v3
      with:
        repository: webstech/gggmonitored
        path: gggmonitored

    # Check out email project
    - name: gggmail - Checkout
      uses: actions/checkout@v3
      with:
        repository: webstech/gggmail
        path: gggmail

    #
    # Finished installs and builds
    #

    # Generate a config with updates from the env
    # Not usually needed if the project can be set up with all the config values known
    - name: Generate config file
      run: |
        npm run genconfig -- -f json --file $GITGITGADGET_CONFIG
        cat $GITGITGADGET_CONFIG
      working-directory: ggguser
      env:
        config: "./build/src/model.js"

    # run test with config
    - name: Test config file with jest
      run: npm run test:config
      working-directory: gitgitgadget
      if: ${{ 1 == 0 }}

    # check for emails
    - name: git log for emails
      run: git log
      working-directory: gggmail

    # configure monitored repo
    - name: set monitored git config
      run: |
        git config --add gitgitgadget.smtpUser joe_user@example.com
        git config --add gitgitgadget.smtpHost localhost
        git config --add gitgitgadget.smtpPass secret
        git config --add gitgitgadget.smtpOpts "{port: 1035, secure:true, tls: {rejectUnauthorized: false}}"
        git config --add gitgitgadget.publishRemote https://github.com/$GITGITGADGET_REPO_BASEOWNER/$GITGITGADGET_REPO_NAME
        git config --add gitgitgadget.loreGitDir ../gggmail
        git config --list --local
      working-directory: ggguser
      env:
        GIT_AUTHOR_NAME: ${{ env.GITGITGADGET_MAIL_AUTHOR }}
        GIT_AUTHOR_EMAIL: ${{ env.GITGITGADGET_MAIL_AUTHOR }}@fakehost.com
        # APPTOKEN: ${{ secrets.GITGITGADGET_APPTOKEN }}

    # run innocuous misc-helper commands
    - name: misc helper display options
      run: |
        git -C ../gggmonitored config --list --local
        echo $GITGITGADGET_CONFIG
        node build/script/misc-helper.js -g ../gggmonitored -G ../ggguser --config $GITGITGADGET_CONFIG get-gitgitgadget-options
      working-directory: gitgitgadget
      env:
        GIT_AUTHOR_NAME: ${{ env.GITGITGADGET_MAIL_AUTHOR }}
        GIT_AUTHOR_EMAIL: ${{ env.GITGITGADGET_MAIL_AUTHOR }}@fakehost.com
        # *********** Probably need to set this **********
        # GIT_CONFIG_PARAMETERS: 'gitgitgadget.${{ env.GITGITGADGET_REPO_BASEOWNER }}.githubtoken=${{ secrets.GITGITGADGET_APPTOKEN }}'
      if: ${{ 1 == 0 }}

    # start mail daemon? - not working
    - name: Generate emails
      uses: BerniWittmann/background-server-action@v1.0.4
      with:
         command: node ggguser/build/mailServer/sendTest.js --port 1025 --count=1, sleep 15
         start: node ggguser/build/mailServer/index.js --mail=gggmail
      if: ${{ 1 == 0 }}
      # working-directory: ggguser

    # generate emails
    - name: Generate emails
      run: |
        node ggguser/build/mailServer/index.js --mail=gggmail &
        sleep 2
        node ggguser/build/mailServer/sendTest.js --port 1025 --count=1
        sleep 15
        kill %%
      env:
        GIT_AUTHOR_NAME: ${{ secrets.AUTHOR }}
        GIT_AUTHOR_EMAIL: ${{ secrets.EMAIL }}
        GIT_COMMITTER_NAME: ${{ secrets.AUTHOR }}
        GIT_COMMITTER_EMAIL: ${{ secrets.EMAIL }}
      # working-directory: gggmail

    # check for emails
    - name: git log for emails
      run: git log
      working-directory: gggmail

    - name: misc helper handle new emails
      run: |
        node build/script/misc-helper.js  -g ../gggmonitored -G ../ggguser --config $GITGITGADGET_CONFIG handle-new-mails
      working-directory: gitgitgadget
      env:
        GIT_AUTHOR_NAME: ${{ secrets.AUTHOR }}
        GIT_AUTHOR_EMAIL: ${{ secrets.EMAIL }}
        GIT_COMMITTER_NAME: ${{ secrets.AUTHOR }}
        GIT_COMMITTER_EMAIL: ${{ secrets.EMAIL }}

    # configure monitored repo
    - name: Display notes
      run: |
        git notes --ref=refs/notes/gitgitgadget
        git notes --ref=refs/notes/gitgitgadget show c9e1e802556ac9927f852a7cd2e34c3d688126ed
        git notes --ref=refs/notes/gitgitgadget show e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
      working-directory: gggmonitored
      env:
        GIT_AUTHOR_NAME: ${{ secrets.AUTHOR }}
        GIT_AUTHOR_EMAIL: ${{ secrets.EMAIL }}
        GIT_COMMITTER_NAME: ${{ secrets.AUTHOR }}
        GIT_COMMITTER_EMAIL: ${{ secrets.EMAIL }}

    # *** not run *** run inocuous misc-helper commands
    - name: set git config
      run: |
        node build/scripts/misc-helper-js -G ../gggmonitored -G ../ggguser get-gitgitgadget-options
      working-directory: gitgitgadget
      env:
        GIT_AUTHOR_NAME: ${{ env.GITGITGADGET_MAIL_AUTHOR }}
        GIT_AUTHOR_EMAIL: ${{ env.GITGITGADGET_MAIL_AUTHOR }}@fakehost.com
      if: ${{ 1 == 0 }}

