name: Process PR create and sync

on:
  repository_dispatch:
    types: [xpull-event]

jobs:
  process-comment:
    runs-on: ubuntu-latest
    env:
      # GIT_BASE: 2dc94da3744bfbbf145eca587a0f5ff480cc5867
      # GIT_REF: 89bece5
      GITGITGADGET_REPO_OWNER: "webstech"
      GITGITGADGET_REPO_BASEOWNER: "webstech"
      GITGITGADGET_REPO_NAME: "gggmonitored"
      GITGITGADGET_MAILREPO_NAME: "gggmail"
      GITGITGADGET_MAILREPO_OWNER: "webstech"
      GITGITGADGET_MAILREPO_HOST: "github.com"
      GITGITGADGET_MAIL_AUTHOR: "gitter"
      GITGITGADGET_CONFIG: "../config.json"
      # GIT_AUTHOR_NAME: ${{ env.GITGITGADGET_MAIL_AUTHOR }}
      # GIT_AUTHOR_EMAIL: ${{ env.GITGITGADGET_MAIL_AUTHOR }}@fakehost.com
      PR_NUMBER: ${{ github.event.client_payload.github.event.number }}
      PR_OWNER: ${{ github.event.client_payload.github.repository_owner }}
      PR_ACTION: ${{ github.event.client_payload.action }}

    steps:
    - name: Install node
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        # cache: "npm"

    # Check out repo under sub-directory so other repos can be checked out
    - name: gitgitgadget - Checkout
      uses: actions/checkout@v3
      with:
        repository: webstech/gitgitgadget
        path: gitgitgadget
        ref: poc

    - name: gitgitgadget - Install packages
      run: npm ci
      working-directory: gitgitgadget

    - name: gitgitgadget- Run build
      run: npm run build
      working-directory: gitgitgadget

    - name: ggguser - Checkout
      uses: actions/checkout@v3
      with:
        path: ggguser
        token: ${{ secrets.RUNNER_TOKEN }}

    - name: ggguser - Install packages
      run: npm ci
      working-directory: ggguser

    - name: ggguser - Run build
      run: npm run build
      working-directory: ggguser

    # Check out ggg supported project
    - name: gggmonitored - Checkout
      uses: actions/checkout@v3
      with:
        repository: webstech/gggmonitored
        path: gggmonitored
        token: ${{ secrets.RUNNER_TOKEN }}

    #
    # Finished installs and builds
    #

    # Generate a config with updates from the env
    # Not usually needed if the project can be set up with all the config values known
    - name: Generate config file
      run: |
        npm run genconfig -- -f json --file $GITGITGADGET_CONFIG
        cat $GITGITGADGET_CONFIG
      working-directory: ggguser
      env:
        config: "./build/src/model.js"

    # configure monitored repo
    - name: set monitored git config
      run: |
        git config --add gitgitgadget.smtpUser joe_user@example.com
        git config --add gitgitgadget.smtpHost localhost
        git config --add gitgitgadget.smtpPass secret
        git config --add gitgitgadget.smtpOpts "{port: 1025, secure:true, tls: {rejectUnauthorized: false}}"
        git config --add gitgitgadget.publishRemote https://github.com/$GITGITGADGET_REPO_BASEOWNER/$GITGITGADGET_REPO_NAME
        git config --add gitgitgadget.loreGitDir ../gggmail
        git config --list --local
      working-directory: ggguser
      env:
        GIT_AUTHOR_NAME: ${{ env.GITGITGADGET_MAIL_AUTHOR }}
        GIT_AUTHOR_EMAIL: ${{ env.GITGITGADGET_MAIL_AUTHOR }}@fakehost.com
        # APPTOKEN: ${{ secrets.GITGITGADGET_APPTOKEN }}

    # run check pull-request contents
    - name: misc helper process pull request create/update
      run: |
        node build/script/misc-helper.js -g ../gggmonitored -G ../ggguser --config $GITGITGADGET_CONFIG handle-pr-push $PR_OWNER $PR_NUMBER
      working-directory: gitgitgadget
      env:
        GIT_AUTHOR_NAME: ${{ env.GITGITGADGET_MAIL_AUTHOR }}
        GIT_AUTHOR_EMAIL: ${{ env.GITGITGADGET_MAIL_AUTHOR }}@fakehost.com
        GIT_COMMITTER_NAME: ${{ secrets.AUTHOR }}
        GIT_COMMITTER_EMAIL: ${{ secrets.EMAIL }}
        COMMENT_ID: ${{ github.event.client_payload.github.payload.comment.id }}
        OWNER_ID: ${{ github.event.client_payload.github.payload.repository.owner.login }}
        GGG_TOKEN: ${{ secrets.RUNNER_TOKEN }}
        GIT_CONFIG_PARAMETERS: "'gitgitgadget.${{ env.GITGITGADGET_REPO_OWNER }}.githubToken=${{ secrets.RUNNER_TOKEN }}'"

        # *********** Probably need to set this **********
        # GIT_CONFIG_PARAMETERS: 'gitgitgadget.${{ env.GITGITGADGET_REPO_BASEOWNER }}.githubtoken=${{ secrets.GITGITGADGET_APPTOKEN }}'
      # if: ${{ 1 == 0 }}
